organization.stamp.select=SELECT os.id, os.stamp_image FROM org_stamp os \
  INNER JOIN legal_entity_owner leo \
  ON (leo.org_stamp_id = os.id)

organization.stamp.insert=INSERT INTO org_stamp (id, stamp_image, create_time) \
  VALUES (:id, :stampImage, :createTime)

vehicle.photo.select=SELECT vp.id, vp.photo FROM vehicle_photo vp \
  INNER JOIN ev_identity ev \
  ON (ev.vehicle_photo_id = vp.id)

vehicle.photo.insert=INSERT INTO vehicle_photo (id, photo, create_time) \
  VALUES (:id, :photo, :createTime)

organization.type.enroll.insert = INSERT INTO is_enroll \
  (id, reg_no, reg_no_bangla, vehicle_type, vehicle_type_text, ownership_type_enum, current_authority, \
  current_authority_text, ownership_type, vehicle_model, manufacturer, chesis_no, registration_date, \
  ownership_transfer_date, payment_date_nepal, transaction_no, number_of_seats, owner_email, owner_phone, \
  bank_name, vehicle_photo_id, org_name, org_vat_pan_no, org_stamp_id, org_address, has_representative, \
  owner_name, owner_nid, owner_address, country_id, country_text, district_id, district_text, epc, rf_tag_id, \
  tag_id, vehicle_class, created_by, create_time) \
  VALUES \
  (:enrollId, :regNo, :regNoNepal, :vehicleType, :vehicleTypeText, :ownershipTypeName, :currentAuthorityId, \
  :currentAuthorityName, :ownershipType, :model, :manufacturer, :chassisNo, :registrationDateNpl, \
  :ownershipTransferDateNpl, :paymentDateNpl, :paymentReceiptNumber, :noOfSeats, :ownerEmail, :ownerPhone, \
  :bankName, :vehiclePhotoId, :organizationName, :orgVatOrPanNo, :orgStampPhotoId, :orgAddress, :hasRepresentative, \
  :ownerName, :ownerNID, :ownerAddress, :nationality, :nationalityText, :passportIssueAuth, :passportIssueAuthText, \
  :epc, :rfid, :tagId, :vehicleClass, :createdBy, :createTime)


organization.type.enroll.select = SELECT ev.id, ev.reg_no, ev.nepali_reg_no, ev.ev_type_id, ev.ev_type_text, \
  ev.ownership_type, ev.reg_exam_unit_id, ev.reg_exam_unit_text, ev.owner_type, ev.ev_model_text, ev.ev_make_text, \
  ev.chassis_no, ev.issue_date, ev.ownership_transfer_date, ev.payment_date, ev.payment_receipt_number, ev.number_of_seats, \
  ev.email, ev.phone, ev.bank_name, ev.vehicle_photo_id, leo.name, leo.company_certificate, leo.org_stamp_id, leo.address org_address, \
  CASE WHEN leo.person_id > 0 THEN 1 ELSE 0 END has_representative, \
  person.full_name, person.passport, person.address, person.country_id, person.country_text, person.district_id, \
  person.district_text, perso.epc, perso.rfid, perso.tag_id, et.code code \
  FROM ev_identity ev \
  LEFT JOIN legal_entity_owner leo on (leo.id = ev.legal_entity_owner_id) \
  LEFT JOIN person person on (person.id = leo.person_id) \
  LEFT JOIN personalize perso on (perso.ev_identity_id = ev.id) \
  LEFT JOIN ev_type et on (et.id = ev.ev_type_id) where ev.owner_Type = 1);

individual.type.enroll.insert = INSERT INTO is_enroll \
  (id, reg_no, reg_no_bangla, vehicle_type, vehicle_type_text, ownership_type_enum, current_authority, current_authority_text, \
  ownership_type, vehicle_model, manufacturer, chesis_no, registration_date, ownership_transfer_date, payment_date_nepal, \
  transaction_no, number_of_seats, owner_email, owner_phone, bank_name, vehicle_photo_id, owner_name, owner_nid, \
  owner_address, country_id, country_text, district_id, district_text, bio_data_id, epc, rf_tag_id, tag_id, vehicle_class, \
  created_by, create_time) \
  VALUES (:enrollId, :regNo, :regNoNepal, :vehicleType, :vehicleTypeText, :ownershipTypeName, :currentAuthorityId, \
  :currentAuthorityName, :ownershipType, :model, :manufacturer, :chassisNo, :registrationDateNpl, :ownershipTransferDateNpl, :paymentDateNpl, \
  :paymentReceiptNumber, :noOfSeats, :ownerEmail, :ownerPhone, :bankName, :vehiclePhotoId, :ownerName, :ownerNID, :ownerAddress, :nationality, \
  :nationalityText, :passportIssueAuth, :passportIssueAuthText, :bioDataId, :epc, :rfid, :tagId, :vehicleClass, :createdBy, :createTime);

individual.type.enroll.select = SELECT ev.id, ev.reg_no, ev.nepali_reg_no, ev.ev_type_id, ev.ev_type_text, ev.ownership_type, \
  ev.reg_exam_unit_id, ev.reg_exam_unit_text, ev.owner_type, ev.ev_model_text, ev.ev_make_text, ev.chassis_no, \
  ev.issue_date, ev.ownership_transfer_date, ev.payment_date, ev.payment_receipt_number, ev.number_of_seats, ev.email, \
  ev.phone, ev.bank_name, ev.vehicle_photo_id, person.full_name, person.passport, person.address, person.country_id, \
  person.country_text, person.district_id, person.district_text, bio.id bio_data_id, perso.epc, perso.rfid, \
  perso.tag_id, et.code code \
  FROM ev_identity ev \
  LEFT JOIN person person ON (person.id = ev.person_id ) \
  LEFT JOIN biometric bio ON (person.id = bio.applicant_id AND bio.active = 1) \
  LEFT JOIN personalize perso ON (perso.ev_identity_id = ev.id) \
  LEFT JOIN ev_type et ON (et.id = ev.ev_type_id) WHERE ev.owner_Type = 0;

biometric.select = SELECT bio.id, bio.photo, bio.signature FROM Biometric bio \
  LEFT JOIN person per ON (bio.applicant_id = per.id) \
  WHERE bio.active = 1;

biometric.insert = INSERT INTO Biometric (id, photo, signature, created_by, create_time) \
  VALUES (:id, :photo, :signature, :createdBy, :createTime);


